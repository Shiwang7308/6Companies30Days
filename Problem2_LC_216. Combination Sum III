// https://leetcode.com/problems/combination-sum-iii/description/
class Solution {
    void helper(vector<vector<int>>&ans, vector<int>&arr,vector<int>temp,int ind,int target,int k)
    {
        if(target==0 && k==0)
        {
           
            ans.push_back(temp);
            return;
        }
 
        if(ind==arr.size() || k<0 || target<0)
        return;
        
       
        helper(ans,arr,temp,ind+1,target,k);
        if(arr[ind]<=target)
        {
            
            temp.push_back(arr[ind]);
        return helper(ans,arr,temp,ind+1,target-arr[ind],k-1);
        }
       
    }
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>>ans;
        vector<int>temp;
        vector<int>arr(9,0);
        for(int i=0;i<9;i++)
        arr[i]=i+1;

        helper(ans,arr,temp,0,n,k);
        return ans;
    }
};